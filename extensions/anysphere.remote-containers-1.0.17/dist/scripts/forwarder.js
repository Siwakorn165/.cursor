"use strict";var __awaiter=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(o,s){function c(t){try{a(n.next(t))}catch(t){s(t)}}function i(t){try{a(n.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(c,i)}a((n=n.apply(t,e||[])).next())}))},__generator=this&&this.__generator||function(t,e){var r,n,o,s,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;s&&(s=0,i[0]&&(c=0)),c;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return c.label++,{value:i[1],done:!1};case 5:c.label++,n=i[1],i=[0];continue;case 7:i=c.ops.pop(),c.trys.pop();continue;default:if(!((o=(o=c.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){c=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){c.label=i[1];break}if(6===i[0]&&c.label<o[1]){c.label=o[1],o=i;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(i);break}o[2]&&c.ops.pop(),c.trys.pop();continue}i=e.call(t,c)}catch(t){i=[6,t],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}};Object.defineProperty(exports,"__esModule",{value:!0});var child_process_1=require("child_process"),net=require("net"),util_1=require("util"),execFileAsync=(0,util_1.promisify)(child_process_1.execFile);function logInfo(t){console.info("forwarder: ".concat(t))}function logError(t){console.error("forwarder error: ".concat(t))}var Forwarder=function(){function t(){}return t.prototype.monitorContainerK8s=function(t){var e;return __awaiter(this,void 0,void 0,(function(){var r,n,o;return __generator(this,(function(s){switch(s.label){case 0:s.label=1;case 1:return s.trys.push([1,3,,4]),[4,execFileAsync(t.kubectlPath,["get","pod","--namespace",t.namespace,"--context",t.context,"-o","json",t.podname],{windowsHide:!0})];case 2:return r=s.sent().stdout,n=JSON.parse(r),"Running"===(null===(e=null==n?void 0:n.status)||void 0===e?void 0:e.phase)?[3,4]:(logInfo("Pod not alive: ".concat(JSON.stringify(n))),[3,6]);case 3:return o=s.sent(),logError("Error checking pod status: ".concat(o)),[3,6];case 4:return[4,new Promise((function(t){return setTimeout(t,1e3)}))];case 5:return s.sent(),[3,0];case 6:return[2]}}))}))},t.prototype.monitorContainerDocker=function(t){return __awaiter(this,void 0,void 0,(function(){var e,r,n,o;return __generator(this,(function(s){switch(s.label){case 0:e=0,r=Date.now(),n=function(){var n;return __generator(this,(function(o){switch(o.label){case 0:return n=(0,child_process_1.spawn)(t.dockerPath,["exec","-u",t.remoteUser,"-i",t.containerId,"tail","-f","/dev/null"]),[4,new Promise((function(t){n.on("error",(function(e){t()})),n.once("close",(function(){t()})),n.on("exit",(function(){t()}))}))];case 1:return o.sent(),Date.now()-r>3e4&&(e=0,r=Date.now()),++e>3?(logError("Too many retries in 30 seconds, assuming container is actually dead"),[2,{value:void 0}]):[2]}}))},s.label=1;case 1:return[5,n()];case 2:return"object"==typeof(o=s.sent())?[2,o.value]:[3,1];case 3:return[2]}}))}))},t.prototype.monitorContainer=function(t){return __awaiter(this,void 0,void 0,(function(){return __generator(this,(function(e){switch(e.label){case 0:return"docker"!==t.type?[3,2]:[4,this.monitorContainerDocker(t)];case 1:case 3:return e.sent(),[3,5];case 2:return"k8s"!==t.type?[3,4]:[4,this.monitorContainerK8s(t)];case 4:throw new Error("Invalid config type: ".concat(t));case 5:return[2]}}))}))},t.prototype.generateRemoteNodeJsCodePort=function(t){var e=t.port,r=t.hostname;return"const net = require('net');\nconst fs = require('fs');\nprocess.stdin.pause();\n\nprocess.on('uncaughtException', function (err) {\n\tconsole.error('error: ' + (err.stack || err.message) + '\\n');\n\tprocess.exit(1);\n});\n\nprocess.stdin.on('close', function (hadError) {\n\t\tconsole.error(hadError ? 'Remote stdin close with error' : 'Remote stdin close');\n\t\tprocess.exit(hadError ? 1 : 0);\n\t});\n\nlet didBind = false;\nlet didTryLocalhostIpv4 = false;\nlet didTryLocalhostIpv6 = false;\n\nfunction setupClient(host) {\n\tlet noExit = false;\n\tconst client = net.createConnection({ host, port: ".concat(e,"}, () => {\n\t\tconsole.error('Connection established on ' + host + ':").concat(e,"');\n\t\tif (didBind) {\n\t\t\treturn;\n\t\t}\n\t\tdidBind = true;\n\t\tnoExit = false;\n\t\tclient.pipe(process.stdout);\n\t\tprocess.stdin.pipe(client);\n\t});\n\tclient.on('close', function (hadError) {\n\t\tif (!noExit) {\n\t\t\tconsole.error(hadError ? 'Remote close with error' : 'Remote close');\n\t\t\tprocess.exit(hadError ? 1 : 0);\n\t\t}\n\t});\n\tclient.on('error', function (err) {\n\t\tconsole.error('client error', err && (err.stack || err.message) || String(err));\n\t\tif ('").concat(r,"' === 'localhost' && !didBind) {\n\t\t\t// try again with an explicit ipv4 host\n\t\t\tif (!didTryLocalhostIpv4) {\n\t\t\t\tconsole.error('Retrying on 127.0.0.1');\n\t\t\t\tdidTryLocalhostIpv4 = true;\n\t\t\t\tsetupClient('127.0.0.1');\n\t\t\t\tnoExit = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!didTryLocalhostIpv6) {\n\t\t\t\tconsole.error('Retrying on ::1');\n\t\t\t\tdidTryLocalhostIpv6 = true;\n\t\t\t\tsetupClient('::1');\n\t\t\t\tnoExit = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.error('Failed to bind to localhost; exhausted retries');\n\t\t}\n\t\tif (!noExit) {\n\t\t\tprocess.exit(1);\n\t\t}\n\t});\n}\nsetupClient('").concat(r,"');")},t.prototype.generateRemoteNodeJsCodeSocket=function(t){return"const net = require('net');\nconst fs = require('fs');\nlet connectionCount = 0;\nconst connections = {};\nconst server = net.createServer((socket) => {\n\tconst i = connectionCount;\n\tconsole.error('Connection established', i);\n\tconnectionCount++;\n\tconnections[i] = socket;\n\tsocket.on('data', (data) => {\n\t\tprocess.stdout.write(JSON.stringify({i, data: data.toString('base64')}) + '\\n');\n\t});\n\tsocket.on('end', () => {\n\t\tconsole.error('Socket end', i);\n\t\tprocess.stdout.write(JSON.stringify({i, end: true}) + '\\n');\n\t})\n\tsocket.on('close', () => {\n\t\tconsole.error('Socket close', i);\n\t\tprocess.stdout.write(JSON.stringify({i, close: true}) + '\\n');\n\t\tdelete connections[i];\n\t})\n\tsocket.on('error', (err) => {\n\t\tconsole.error('Connection error', i, err);\n\t\tprocess.stdout.write(JSON.stringify({i, error: String(err)}) + '\\n');\n\t\tdelete connections[i];\n\t})\n});\n\nserver.on('close', (hadError) => {\n\tconsole.error(hadError ? 'Remote close with error' : 'Remote close');\n\tprocess.exit(hadError ? 1 : 0);\n});\nserver.on('error', (err) => {\n\tprocess.stderr.write(err && (err.stack || err.message) || String(err));\n});\nlet stdinBuffer = '';\nprocess.stdin.on('data', (data) => {\n\tstdinBuffer += Buffer.from(data).toString();\n\tlet lines = stdinBuffer.split('\\n');\n\tstdinBuffer = lines.pop(); // Keep the last incomplete line in buffer\n\tfor (const line of lines) {\n\t\tif (line.trim()) { // Only process non-empty lines\n\t\t  const message = JSON.parse(line);\n\t\t\tconst socket = connections[message.i];\n\t\t\tif (socket) {\n\t\t\t\tif (message.data) {\n\t\t\t\t\tsocket.write(Buffer.from(message.data, 'base64'));\n\t\t\t\t}\n\t\t\t\telse if (message.end) {\n\t\t\t\t\tconsole.error('Message end', message.i);\n\t\t\t\t\tsocket.end();\n\t\t\t\t}\n\t\t\t\telse if (message.close) {\n\t\t\t\t\tconsole.error('Message close', message.i);\n\t\t\t\t\tsocket.destroy();\n\t\t\t\t}\n\t\t\t\telse if (message.error) {\n\t\t\t\t\tconsole.error('Message error', message.i, message.error);\n\t\t\t\t\tsocket.destroy(new Error(message.error));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('Unknown message', message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t  if (message.close) {\n\t\t\t\t  // meh whatever\n\t\t\t\t} else {\n\t\t\t\t  console.error('Connection not found: ', line);\n        }\n\t\t\t}\n\t\t}\n\t}\n});\n\nprocess.stdin.on('end', () => {\n\tconsole.error('stdin end');\n\tprocess.exit(0);\n})\nserver.listen({ path: '".concat(t.socket,"' });\n\nprocess.stdin.on('error', (err) => {\n\tconsole.error('stdin error', err);\n\tprocess.exit(1);\n})\nprocess.stdin.on('close', (hadError) => {\n\tconsole.error(hadError ? 'Remote stdin close with error' : 'Remote stdin close');\n\tprocess.exit(hadError ? 1 : 0);\n});\nprocess.on('uncaughtException', (err) => {\n\tfs.writeSync(process.stderr.fd, 'error: ' + (err.stack || err.message) + '\\n');\n\tprocess.exit(1);\n});")},t.prototype.handleClientPort=function(t){var e=t.socket,r=t.config,n=t.options,o=t.remoteServerNodePath,s=[],c=this.generateRemoteNodeJsCodePort(n),i="".concat(o,' -e "').concat(c,'"');if("docker"===r.type)s.push(r.dockerPath,"exec","-u",r.remoteUser,"-i",r.containerId,"bash","-c",i);else{if("k8s"!==r.type)throw new Error("Invalid config type: ".concat(r));s.push(r.kubectlPath,"exec","--namespace",r.namespace,"--context",r.context,"-i","-c",r.name,r.podname,"--","bash","-c",i)}var a=(0,child_process_1.spawn)(s[0],s.slice(1),{stdio:["pipe","pipe","pipe"]});return e.pipe(a.stdin),a.stdout.pipe(e),new Promise((function(t,r){e.on("close",(function(){a.kill(),t()})),e.on("error",(function(t){logError("handleClient error: ".concat(t.message)),a.kill(),r(t)})),a.stderr.on("data",(function(t){logInfo("handleClient stderr: ".concat(Buffer.from(t).toString()))})),a.on("error",(function(t){logError("handleClient error: ".concat(t.message)),e.end(),r(t)})),a.on("close",(function(){logInfo("handleClient subprocess closed"),e.end(),t()})),a.on("exit",(function(n,o){logInfo("handleClient subprocess exited with code ".concat(n," and signal ").concat(o)),e.end(),0!==n?r(new Error("handleClient subprocess exited with code ".concat(n," and signal ").concat(o))):t()}))}))},t.prototype.startServer=function(t){var e=t.config,r=t.localPort,n=t.localHostname,o=t.remotePort,s=t.remoteHostname,c=t.remoteServerNodePath,i=t.portSetter;return __awaiter(this,void 0,void 0,(function(){var t,a=this;return __generator(this,(function(l){switch(l.label){case 0:return logInfo("Forwarding (remote) ".concat(s,":").concat(o," to (local) ").concat(n,":").concat(r)),t=net.createServer((function(t){a.handleClientPort({socket:t,config:e,options:{port:o,hostname:s},remoteServerNodePath:c}).catch((function(e){t.end(),logError("startServer error: ".concat(e instanceof Error?e.message:String(e)))}))})),[4,new Promise((function(o,s){t.on("listening",(function(){var r=t.address().port;logInfo("====forwarderPort=".concat(r,"====")),i(r),a.monitorContainer(e).then((function(){t.close(),logInfo("Stopping forwarding for port ".concat(r)),o()})).catch(s)})),t.on("error",(function(t){s(t)})),t.listen(r,n)}))];case 1:return[2,l.sent()]}}))}))},t.prototype.handleClientSocket=function(t){var e=t.localSocket,r=t.config,n=t.options,o=t.remoteServerNodePath,s=[],c=this.generateRemoteNodeJsCodeSocket(n),i="".concat(o,' -e "').concat(c,'"');if("docker"===r.type)s.push(r.dockerPath,"exec","-u",r.remoteUser,"-i",r.containerId,"bash","-c",i);else{if("k8s"!==r.type)throw new Error("Invalid config type: ".concat(r));s.push(r.kubectlPath,"exec","--namespace",r.namespace,"--context",r.context,"-i","-c",r.name,r.podname,"--","bash","-c",i)}var a=(0,child_process_1.spawn)(s[0],s.slice(1),{stdio:["pipe","pipe","pipe"]}),l={},d="",u=function(t){if(!(t.i in l)){var r=net.createConnection(e);l[t.i]=r,r.on("data",(function(e){a.stdin.write(JSON.stringify({i:t.i,data:e.toString("base64")})+"\n")})),r.on("error",(function(e){var r=e instanceof Error?e.message:String(e);logError("handleClient error: ".concat(r)),a.stdin.write(JSON.stringify({i:t.i,error:r})+"\n"),delete l[t.i]})),r.on("end",(function(){a.stdin.write(JSON.stringify({i:t.i,end:!0})+"\n")})),r.on("close",(function(){a.stdin.write(JSON.stringify({i:t.i,close:!0})+"\n"),delete l[t.i]}))}var n=l[t.i];t.data?n.write(Buffer.from(t.data,"base64")):t.end?n.end():t.error?(logError("handleClient error: ".concat(t.error)),n.destroy(new Error(t.error)),delete l[t.i]):t.close?(n.destroy(),delete l[t.i]):logError("handleClient error: unknown message: ".concat(JSON.stringify(t)))};return a.stdout.on("data",(function(t){var e,r=(d+=Buffer.from(t).toString()).split("\n");d=null!==(e=r.pop())&&void 0!==e?e:"";for(var n=0,o=r;n<o.length;n++){var s=o[n];if(s.trim())try{var c=JSON.parse(s);u(c)}catch(t){console.error("handleClient error: ".concat(t instanceof Error?t.message:String(t)))}}})),a.stderr.on("data",(function(t){logInfo("handleClient stderr: ".concat(Buffer.from(t).toString()))})),new Promise((function(t,e){a.on("error",(function(t){logError("handleClient error: ".concat(t.message)),e(t)})),a.on("close",(function(){logInfo("handleClient subprocess closed"),t()})),a.on("exit",(function(r,n){logInfo("handleClient subprocess exited with code ".concat(r," and signal ").concat(n)),0!==r?e(new Error("handleClient subprocess exited with code ".concat(r," and signal ").concat(n))):t()}))}))},t.prototype.startSocketForward=function(t,e,r,n){return __awaiter(this,void 0,void 0,(function(){var o,s;return __generator(this,(function(c){switch(c.label){case 0:o=this.handleClientSocket({localSocket:e,config:t,options:{socket:r},remoteServerNodePath:n}),logInfo("====socketForward=success===="),c.label=1;case 1:return c.trys.push([1,3,,4]),[4,o];case 2:return c.sent(),[3,4];case 3:throw s=c.sent(),logError("socketForward error: ".concat(s instanceof Error?s.message:String(s))),s;case 4:return logInfo("Stopping forwarding for socket ".concat(e," to ").concat(r," ")),[2]}}))}))},t.prototype.forwardSocket=function(t,e,r,n){return __awaiter(this,void 0,void 0,(function(){return __generator(this,(function(o){switch(o.label){case 0:return[4,this.startSocketForward(t,e,r,n)];case 1:return o.sent(),[2]}}))}))},t}();function main(){var t,e;return __awaiter(this,void 0,void 0,(function(){var r,n,o,s,c,i,a,l,d,u,f,p,h,g,m,w,v,k,y,_,S;return __generator(this,(function(x){switch(x.label){case 0:if(r=process.argv.slice(2),"port"!==(s=r[0])&&"socket"!==s&&(logError('Expected first arg to be "port" or "socket"'),process.exit(1)),8===r.length?(logInfo("Forwarder started with args ".concat(r.join(" "))),d=null!==(t=process.env.KUBECTL_PATH)&&void 0!==t?t:"kubectl",n={type:"k8s",kubectlPath:d,context:r[1],namespace:r[2],podname:r[3],name:r[4]},o=r[5],c=6,i=7,a=6,l=7):6===r.length?(u=r[1],o=r[2],f=r[3],p=null!==(e=process.env.DOCKER_PATH)&&void 0!==e?e:"docker",c=4,i=5,a=4,l=5,n={type:"docker",containerId:u,remoteUser:f,dockerPath:p}):(logError('For kubernetes: Expected arguments: "port"|"socket" <context> <namespace> <podname> <containername> <remote_server_node_path> (<local_host> <remote_host> | <local_socket> <remote_socket>)'),logError('For docker: Expected arguments: "port"|"socket" <container_id> <remote_server_node_path> <remoteUser> (<local_host> <remote_host> | <local_socket> <remote_socket>)'),process.exit(1)),process.stdin.on("data",(function(t){t.includes("\0")&&(logInfo("Received null character, exiting"),process.exit(0))})),process.stdin.on("close",(function(){logInfo("stdin closed"),process.exit(1)})),process.stdin.on("error",(function(t){logError("stdin error: ".concat(t)),process.exit(1)})),process.stdin.resume(),"port"!==s)return[3,5];if(h=r[c],g=void 0,m=void 0,h.startsWith("[")){if(-1===(y=h.indexOf("]"))||":"!==h[y+1])throw new Error("Invalid IPv6 host format: ".concat(h));g=h.slice(1,y),m=Number(h.slice(y+2))}else g=h.split(":")[0],m=parseInt(h.split(":")[1]);if((w=r[i]).startsWith("[")){if(-1===(y=w.indexOf("]"))||":"!==w[y+1])throw new Error("Invalid IPv6 host format: ".concat(w));v=w.slice(1,y),k=Number(w.slice(y+2))}else v=w.split(":")[0],k=parseInt(w.split(":")[1]);return"localhost"!==g?[3,2]:[4,(new Forwarder).startServer({config:n,localPort:m,localHostname:"127.0.0.1",remotePort:k,remoteHostname:v,remoteServerNodePath:o,portSetter:function(t){try{(new Forwarder).startServer({config:n,localPort:t,localHostname:"::1",remotePort:k,remoteHostname:v,remoteServerNodePath:o,portSetter:function(){}}).catch((function(e){logError("Error forwarding port for [::1]:".concat(t,": ").concat(e))}))}catch(e){logError("Error starting fallback server for forwarding port for [::1]:".concat(t,": ").concat(e))}}})];case 1:return x.sent(),[3,4];case 2:return[4,(new Forwarder).startServer({config:n,localPort:m,localHostname:g,remotePort:k,remoteHostname:v,remoteServerNodePath:o,portSetter:function(){}})];case 3:x.sent(),x.label=4;case 4:return[3,7];case 5:return"socket"!==s?[3,7]:(_=r[a],S=r[l],[4,(new Forwarder).forwardSocket(n,_,S,o)]);case 6:x.sent(),x.label=7;case 7:return[2]}}))}))}main().then((function(){logInfo("Forwarder exiting"),process.exit(0)})).catch((function(t){logError(String(t)),process.exit(1)}));